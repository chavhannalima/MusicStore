SQL PROJECT - MUSIC



SELECT * FROM Album
SELECT * FROM customer
SELECT * FROM employee
SELECT * FROM invoice

--Q1 WHO IS THE SENIOR MOST EMP BASED ON JOB TITLE ?

select * from employee
order by levels desc
OFFSET 0 rows
fetch next 1 rows only;




--Q2 WHICH COUNTRY HAS THE MOST INVOICE 

select * from invoice
select count(*) as c, billing_country
from invoice
group by billing_country
order by c desc


--Q3 WHAT ARE TOP 3 VALUES OF TOTAL INVOICE

select * from invoice
select total from invoice
order by total desc
OFFSET 0 rows
fetch next 3 rows only;


--Q4 WHICH CITY HAS THE BEST CUSTOMERS WE WILL THROW A MUSIC FESTIVAL IN THE CITY WE MADE THE MOST MONEY 
--WRITE A QUERY WHICH RETURNS ONE CITY THAT HAS THE HIGHEST SUM OF INVOICE TOTAL. 
--RETURN BOTH THE CITY NAME AND SUM OF ALL INVOICE TOTAL.

select SUM(total) as invoice_total, billing_city 
from invoice
group by billing_city
order by invoice_total desc

--Q5 WHO IS THE BEST CUSTOMER WHO HAS SPEND THE MOST MONEY WILL BE THE BEST CUSTOMER WRITE 
--A QUERY WHICH SHOWS THE PERSON WHO SPENDS THE MOST AMT OF MONEY

select customer.customer_id,first_name,last_name, SUM(invoice.total) as total
from customer
join invoice on customer.customer_id = invoice.customer_id
group by customer.customer_id,first_name,last_name
order by total desc;
select * from customer

SET2

--Q1 WRITE A QUERY TO RETURN A EMAIL,FIRSTNAME , LASTNAME GENRA OF ALL MUSIC LISTNERS 
--RETURN YOUR LIST ORDERED ALPHABETALY BY EMAIL STARTING WITH A

select * from customer
select * from track;
select * from genre;
select * from invoice_line;
select distinct email,first_name,last_name
from customer
join invoice on customer.customer_id = invoice.customer_id
join invoice_line on invoice.invoice_id = invoice_line.invoice_id
where track_id in(
  select track_id from track
  join genre on track.genre_id = genre.genre_id
  where genre.name LIKE 'Rock'
) 
order by email;


--Q2 LETS INVITE THE ARTIST WHO HAVE WRITTEN THE MOST ROCK IN OUR DATA SET 
-- WRITE A QUERY THAT RETURNS A ARTIST NAME AND TOTAL TRACK COUNT OF THE TOP 10 ROCK BANDS 

select * from track
select * from album
select * from artist
select artist.artist_id,artist.name,COUNT(artist.artist_id) as number_of_songs
from track
join album on album.album_id = track.album_id 
join artist on album.album_id = track.album_id 
join genre on genre.genre_id = track.album_id 
where genre.name='rock'
group by artist.artist_id,artist.name
order by number_of_songs DESC
OFFSET 0 rows
fetch next 3 rows only;


-- Q3 RETURN ALL THE TRACK NAMES THAT HAS THE SONG LENGTH LONGER THAN THE AVERAGE SONG LENGTH 
--RETURN THE NAME FOR THE MILLISECONDS FOR EACH TRACK ORDER BY THE SONG LENGTH WITH THE LONGEST SONG LISTED FIRST

select * from track 
select name,milliseconds
from track 
where milliseconds > (
select AVG(milliseconds) as avg_track_length
from track)
order by milliseconds desc;



--SET 3 (ADVANCE LEVEL)

--Q1 FIND HOW MUCH AMT IS SPEND BY EACH CUSTOMER ON ARTIST WRITE
--A QUERY TO RETURN A CUSTOMER NAME, ARTIST NAME AND TOTAL SPEND

select * from customer
select * from artist 

with best_selling_artist as (
select artist.artist_id as artist_id,artist.name as artist_name,sum(invoice_line.unitprice*invoice_line
from invoice_line
join track on track.track_id = invoice_line.track_id
join album on album.album_id = track.album_id
join artist on artist.artist_id = album.artist_id
group by 1
order by 3 desc
OFFSET 0 rows
fetch next 1 rows only;

)
select c.customer_id, c.first_name,c.last_name,bsa.artist_name,
sum(il.unit_price*il.quantity) as amount_spend
from invoice i 
join customer c on c.customer_id = i.customer_id
join customer c on c.cusyomer_id = i.customer_id
joun invoice_line il on.invoice_id = i.invoice_id
join tack t on t.tarck_id = il.track_id
join album alb on albon alb.album_id = t,albm_id
join best_selling_artist
group_by 1,2,3,4
order by 5 desc;


-- Q2 WE WANT TO FIND OUT THE MOST POPULAR MUSIC FOR EACH COUNTRY
--WE DETERMINE THE MOST POPULR GENRE AS THE ENRE AS THE HIGEST AMOUNT OF THE PURCHASE

with popular_genre as 
(
select count(invoice_line.quantity)as purchase , customer.country,genre.name,genre.name,genre.genre_id,
row_number() over(parition by customer.country order by count(invoice_line.quantity)desc)as rowno
from invoice_line
join invoice on invoice.invoice_id = invoice_line.invoice_id
join customer on customer.customer_id = invoice.customer_id
jointrack on track.track_id = invoice_line.track_id
join genre.genre_id = track.genre_id
group by 2,3,4
order by 2 asc, 1 desc
)
select * from popular_genre where rowno <= 1

--Q3 WRITE A QUERY THAT DETERMINE THE CUSTOMER THAT HAS SPENDT THE MOST ON MUSIC FOR EACH COUNTRY
-- WRITE A query that returns the country along with the top cluster and how much they spend for countries 
--where the top amt spend is shared provide all customers who spend this amt

with recursive 
customer_with_country as (
select customer.first_name,last_name,billing_country,sum(total) as total_spending
from invoice
join customer on customer.customer_id = invoice.customer_id
group by 1,2,3,4
order by 2,3 desc

country_max_speding as(
select billing_country,max(total_spending)
from customer_with_country
group by billing_country)

select cc.billing_country,cc.total_spending,cc.first_name,cc.last_name
from customer_with_spending ms
join country_max_spending ms
on cc.billing_country = ms.billing_country
where cc.total_spending = ms.max_spending
order by 1; 
